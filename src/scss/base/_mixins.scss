@use "variables" as *;
@use "sass:list";

// メディアクエリのミックスイン
@mixin mq($breakpoint: md) {
    @if $breakpoint == sm {
        @media (max-width: $breakpoint-sm) {
            @content;
        }
    } @else if $breakpoint == md {
        @media (max-width: $breakpoint-md) {
            @content;
        }
    } @else if $breakpoint == lg {
        @media (max-width: $breakpoint-lg) {
            @content;
        }
    } @else if $breakpoint == xl {
        @media (max-width: $breakpoint-xl) {
            @content;
        }
    }
}

// フレックスボックスのミックスイン
@mixin flex($justify: flex-start, $align: stretch, $direction: row) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
}

// グリッドのミックスイン
@mixin grid($columns: 1, $gap: 1rem) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

// トランジションのミックスイン
@mixin transition($properties...) {
    $transitions: ();
    @each $property in $properties {
        $transitions: list.append($transitions, $property 0.3s ease, comma);
    }
    transition: $transitions;
}

// ボタンの基本スタイル
@mixin button-base {
    display: inline-block;
    padding: 0.8rem 1.5rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    text-decoration: none;
    text-align: center;
    font-size: 1rem;
    @include transition(background-color, transform);

    &:hover {
        transform: translateY(-2px);
    }
}

// シャドウ効果
@mixin shadow($level: 1) {
    @if $level == 1 {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    } @else if $level == 2 {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    } @else if $level == 3 {
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
    }
} 